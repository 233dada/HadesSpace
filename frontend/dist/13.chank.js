(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[13],{

/***/ "./data/loc_strings/en.js":
/*!********************************!*\
  !*** ./data/loc_strings/en.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

// generated by generateGameData.js + loc_strings.js plugin
// at Wed Jul 22 2020
var data = {
  TID_Artifact: "Artifact",
  UnlockBlueprints: "Unlock blueprints",
  UnlockPrice: "Unlock price",
  UnlockTime: "Unlock Time",
  APTPIOTTPWS: "Preparation time per item (WS)",
  ActivationPrepWS: "Activation delay (WS)",
  ActivationPrepBS: "Activation delay (BS)",
  ActivationDelayWS: "Cooldown (WS)",
  EffectRadiusWS: "Effect range (WS)",
  EffectRadiusBS: "Effect range (BS)",
  AOEDamage_WS: "Area damage (WS)",
  AOEDamage_BS: "Area damage (BS)",
  EffectDurationx10WS: "Effect duration (WS)",
  EffectDurationx10BS: "Effect duration (BS)",
  MaxDPSTimeWS: "Time to maximum damage (WS)",
  MaxDPSTime_BS: "Time to maximum damage (BS)",
  SalvageHullPercentWS: "Hull repaired per destroyed ship (WS)",
  SalvageHullPercentBS: "Hull repaired per destroyed ship (BS)",
  SpawnLifetime_WS: "Lifetime (WS)",
  DroneShipmentBonusMax: "Max. bonus",
  Model: "Model",
  NewModuleSlots: "Type of additional new slot",
  InitialModuleLevels: "Module level",
  OnDestroySpawnCount: "A number of spawn ships after destroy",
  MaxPerStarSystem: "Maximum quantity per system",
  DisableTime: "Disable time",
  Cost: "Cost",
  PlanetTypes: "Planet Types",
  HydrogenPerDay: "New hydro every day",
  TimeToUpgrade: "Time Upgrade",
  ShipmentsCRValuePerDay: "Base Shipments Cost Per Day",
  XPAward: "XP Award",
  MaxUpgradeLevel: "Max Level",
  CreditShipmentModifier: "Shipment modifier",
  MaxShipments: "Max Shipments",
  SlotsUsed: "Weight",
  SalvageCRReward: "Credits for Salvage",
  SalvageHydroReward: "Hydrogen behind Salvage",
  PriceInCrystals: "Buying for crystals",
  MaxInfluenceGain: "Max. influence reward",
  MaxInfluenceLoss: "Max. influence loss",
  InfluenceAwardThreshold: "Actions for gaining influence",
  NumMaxPlanets: "The number of max. planets",
  NumPlayersWithAccess: "Number of players",
  ResearchSlots: "Number of slots for artifacts",
  TimeLimitDays: "Days to complete",
  MinPlayerLevel: "Min. player level",
  IntParam: "Value X",
  artLevel: "Artifact level",
  module: "Module",
  MinRSLevel: "Min. level RS",
  MaxRSLevel: "Max. level RS",
  WSBucketSizes: "Mode",
  TeleportBreaksBond: "Teleport breaks the Bond",
  LeapBreaksBond: "Leap breaks the Bond",
  DestinyBreaksBond: "Destiny breaks the Bond",
  BondBreaksBond: "Bond breaks the Bond",
  BondOverridesBarrier: "Bond ignores the Barrier",
  WhiteStarScore: "WS Score",
  BSScore: "BS Score",
  TID_CORP_LEADER_DESCR: "First officer",
  TID_CORP_COLEADER_DESCR: "Officer",
  TID_CORP_ELDER_DESCR: "Senior member",
  TID_CORP_MEMBER_DESCR: "Member",
  TID_MAINTENANCE_INFO: "We regularly do server maintenance to improve the game.\\n\\n<a name=''http://blog.hadesstar.com/2017/08/about-maintenance.html''>more information</a>",
  TID_SHARE_VIEW_DESCR: "Select a view in this star system to share with your corporation",
  TID_TUT_CONSTRUCT_SHIPYARD_INFO: "Shipyards allow you to create new ships.",
  TID_TUT_COLONIZE_FIRST_PLANET_DESCR: "Your empire grows by colonizing more planets.\\n\\nplanets provide income via shipments, and allow you to build space stations.",
  TID_TUT_CONSTRUCT_TRANSPORT_DESCR: "Transport ships are vital to growing your economy. it's a good idea to keep at least one transport ship around each planet you have colonized. ",
  TID_TUT_CONSTRUCT_SUPPORT_DESCR: "Miner ships are vital for building infrastructure around your planets.",
  TID_TUT_CONSTRUCT_TRADING_STATION_DESCR: "Trading stations provide you with additional shipments that can be delivered to your planets for profit.",
  TID_TUT_UPGRADE_PLANET_DESCR: "Upgrading your planets improves shipment quality and increases the maximum amount of resources you can store",
  TID_TUT_KEEP_DOING_STUFF_DESCR: "Use your transport ships to deliver shipments between the planet and its moons.\\n\\ndelivering shipments helps you earn resources and experience.",
  TID_TUT_COLONIZE_SECOND_PLANET_DESCR: "Expanding to new planets is vital for growing your empire.\\n\\nbefore you can colonize a planet, you have to move at least one of your ships to the surface. the more planets you have colonized, the more expensive colonizing the next one becomes.",
  TID_TUT_COLONIZE_THIRD_PLANET_DESCR: "Colonized planets can also be used to repair your ships. colonize the planet near your damaged battleship to start the process.",
  TID_TUT_MINING_DESCR: "Asteroid fields contain valuable hydrogen. you should always ensure your empire has at least a few miner ships that are busy mining around the clock.",
  TID_TUT_MINER_INFO: "Miner ships collect hydrogen from asteroid fields. they will keep collecting from the same asteroid field until it is depleted.",
  TID_TUT_CREATE_SECOND_TRANSPORT_INFO: "Transport ships are vital to growing your economy. it's a good idea to keep at least one transport ship around each planet you have colonized. ",
  TID_TUT_SHORT_RANGE_SCANNER_INFO: "The short range scanner station allows you to explore nearby sectors, allowing you to see and travel deeper in this star system.",
  TID_TUT_REVEAL_SECTOR_INFO: "Construct a short range scanner and use it to find and colonize a third planet.",
  TID_TUT_DEFEAT_CERBERUS_INFO: "Mysterious cerberus ships appear throughout the hades galaxy. fight back against them using battleships.",
  TID_TUT_CREATE_BATTLESHIP_INFO: "Battleships are crucial for maintaining the security of your other ships, and pushing back against cerberus forces.",
  TID_TUT_REDSTARSCANNER_INFO: "The red star scanner allows you to find and travel to new stars",
  TID_TUT_JUMP_TRANSPORT_INFO: "You can move ships between star systems by using jumpgates.",
  TID_TUT_SEARCH_FOR_MISSION_INFO: "Use your red star scanner to discover a new star system.",
  TID_TUT_BRING_ARTIFACT_INFO: "Planets near red stars are rich in artifacts. bring back an artifact so you can start researching it.",
  TID_TUT_RESEARCH_STATION_INFO: "A research station allows you to study artifacts. construct one in your star system now.",
  TID_TUT_UPGRADE_SHIPYARD_DESCR: "Upgrade your shipyard to level N, to allow you to build more ships.",
  TID_TUT_VIEW_OBJECTIVES_DESCR: "The objectives window provides additional goals and guidance for your journey in the hades galaxy.",
  TID_TUT_INSTALL_MODULE_DESCR: "Ships can be upgraded by installing modules. modules can be either activated or passive, and provide unique advantages to each ship.",
  TID_BUILDING_SHIPYARD: "Shipyard",
  TID_BUILDING_SHIPYARD_DESCR: "Allows construction of ships. upgrade to increase your empire's total fleet capacity.",
  TID_BUILDING_REDSTAR_SCANNER: "Red star scanner",
  TID_BUILDING_REDSTAR_SCANNER_DESCR: "Can detect nearby red stars.",
  TID_BUILDING_REDSTAR_SCANNER_INFO: "The red star scanner can detect nearby stars that are going supernova. those stars usually have old planets with valuable artifacts, but are also guarded by cerberus forces.\\n\\nother players can use their red star scanners to gain access to the same stars.",
  TID_BUILDING_TRADINGSTATION: "Trade station",
  TID_BUILDING_TRADINGSTATION_DESCR: "Creates and accepts shipments to and from your planets. must be placed in an empty sector.",
  TID_BUILDING_DIPLOMACY_CENTER: "Diplomacy station",
  TID_BUILDING_DIPLOMACY_CENTER_DESCR: "Allows establishing diplomatic relations with other players. players in diplomatic relations can send ships to each other's system.",
  TID_BUILDING_DIPLOMACY_CENTER_INFO: "The diplomacy station can create a two way jump gate with another player's home system. once linked, both players can send ships to the other side.",
  TID_BUILDING_WARPLANE_HUB: "Warp lane hub",
  TID_BUILDING_WARPLANE_HUB_DESCR: "Two hubs that can connect to create a temporary warp lane in your system. an active warp lane allows ships to travel instantly and without consuming hydrogen.",
  TID_BUILDING_WARPLANE_HUB_INFO: "This warp lane hub can be connected to another hub for one day, for a fixed hydrogen cost. once connected, ships can travel between the two end points instantly and without consuming hydrogen.",
  TID_BUILDING_STARGATE: "Jump gate",
  TID_BUILDING_STARGATE_DESCR: "Scattered throughout the hades galaxy, these mysterious structures allow ships to jump between star systems.",
  TID_BUILDING_RESEARCH: "Research station",
  TID_BUILDING_RESEARCH_DESCR: "Analyzes artifacts found in red stars.",
  TID_BUILDING_RESEARCH_INFO: "The research station can store and research artifacts. send your transport ship here to automatically deposit new artifacts.",
  TID_BUILDING_SHORT_RANGE_SCANNER: "Short range scanner",
  TID_BUILDING_SHORT_RANGE_SCANNER_DESCR: "Can reveal hidden sectors adjacent to the sector it is placed on.",
  TID_BUILDING_SHORT_RANGE_SCANNER_INFO: "This scanner allows you to reveal adjacent sectors in your star system.",
  TID_BLD_WHITESTAR_SCANNER: "White star scanner",
  TID_BLD_WHITESTAR_SCANNER_DESCR: "Allows you to locate and send ships to white stars. you must be part of a corporation to access white stars.",
  TID_BLD_TIME_MODULATOR: "Time modulator",
  TID_BLD_TIME_MODULATOR_DESCR: "Allows speeding up time over an entire yellow star system.",
  TID_BLD_TIME_MODULATOR_INFO: "An advanced station that draws power from a yellow star to manipulate time. use it to speed up the passage of time in your yellow star. upgrade to increase the speed up factor.",
  TID_BUILDING_BLUESTAR_SCANNER: "Blue star scanner",
  TID_BUILDING_BLUESTAR_SCANNER_DESCR: "Can detect nearby blue stars.",
  TID_BUILDING_BLUESTAR_SCANNER_INFO: "The scanner will send a single battleship to a detected blue star. blue stars constantly collapse from the outside towards the star, have a very short lifetime, and offer no security: all participating player's battleships will fire on each other, as well as the cerberus forces in the system. the player with the last battleship alive wins the mission.",
  TID_BLUE_STAR_ANOMALY: "Anomaly",
  TID_BLUE_STAR_ANOMALY_DESCR: "This non-functional portal seems to lead to distant stars. construct a blue star scanner on it to allow battleships to pass through.",
  TID_BLD_RELAY: "Shipment relay",
  TID_BLD_RELAY_DESCR: "Allows some shipments to be delivered automatically, using fragments retrieved in blue stars.",
  TID_BLD_RELAY_INFO: "Enables automatic shipment delivery on a per-sector basis, for a limited amount of time.\\n\\nthe sectors that the relay is controlling will have credits shipments delivered automatically over time, regardless of the shipment's destination. upgrade the relay to increase the amount of shipments and controlled sectors.\\n\\nthe relay requires star fragments to operate. they can be earned by participating in blue star missions.",
  TID_SHIP_TRANSPORT: "Transport",
  TID_SHIP_TRANSPORT_DESCR: "Picks up and delivers shipments between planets and trade stations",
  TID_SHIP_TRANSPORT_INFO: "Transport ships are crucial for trade. use them to deliver shipments between planets and moons, and to transfer artifacts from red stars.",
  TID_SHIP_MINER: "Miner",
  TID_SHIP_MINER_DESCR: "A slow and weak ship that can collect hydrogen from asteroid fields",
  TID_SHIP_MINER_INFO: "Miner ships can collect hydrogen from asteroid fields",
  TID_SHIP_BATTLESHIP: "Battleship",
  TID_SHIP_BATTLESHIP_DESCR: "A combat ship that can be equipped with additional weapon modules",
  TID_SHIP_CERB_FIGHTER: "Cerberus sentinel",
  TID_SHIP_CERB_FIGHTER_DESCR: "Sentinels have weak hulls but are equipped with a very powerful battery. they pose little threat individually, but are deadly in large numbers or when covered behind stronger cerberus ships.\\n\\nsentinels will always stay within their assigned sector.",
  TID_SHIP_CERB_COLOSSUS: "Cerberus colossus",
  TID_SHIP_CERB_COLOSSUS_DESCR: "A massive cerberus ship that requires a lot of firepower and coordination to bring down.\\n\\nthis ship will always stay within its assigned sector.",
  TID_SHIP_CERB_SECTOR_GUARDIAN: "Cerberus guardian",
  TID_SHIP_CERB_SECTOR_GUARDIAN_DESCR: "A strong ship that cerberus often use to provide cover for sentinels.\\n\\nguardians always stay within their assigned sector.",
  TID_SHIP_CERB_INTERCEPTOR: "Cerberus interceptor",
  TID_SHIP_CERB_INTERCEPTOR_DESCR: "A fast and powerful cerberus ship that can simultaneously fire against 4 enemy ships.\\n\\nthe interceptor will become activated when an enemy ship enters its assigned sector or comes close enough to fire on it. once activated, it will hunt down enemy ships across all sectors, making it very dangerous against non-combat ships.",
  TID_SHIP_CERB_DESTROYER: "Cerberus destroyer",
  TID_SHIP_CERB_DESTROYER_DESCR: "These mysterious cerberus ships are known to jump in red stars and destroy entire planets with their powerful beams. when the destroyer is defeated or a planet destroyed, area damage will be applied to all nearby player ships.",
  TID_SHIP_CERB_PHOENIX: "Cerberus phoenix",
  TID_SHIP_CERB_PHOENIX_DESCR: "The phoenix protects nearby cerberus ships with its area shield. once destroyed, it will spawn a small number of sentinels.\\n\\nthis ship will always stay within its assigned sector.",
  TID_SHIP_ALPHA_DRONE: "Alpha drone",
  TID_SHIP_ALPHA_DRONE_DESCR: "An automated, fast but weak combat ship. the drone travels to its fixed destination and stays there until destroyed or its activation timer runs out.",
  TID_SHIP_SHIPMENT_DRONE: "Shipment drone",
  TID_SHIP_SHIPMENT_DRONE_DESCR: "An automated, fast drone that will automatically deliver shipments when possible. the drone can only cross sectors if they are connected with an active warp lane.",
  TID_SHIP_MINING_DRONE: "Mining drone",
  TID_SHIP_MINING_DRONE_DESCR: "An automated mining ship that targets a single asteroid. once mining is complete, the drone will deliver the hydrogen to the closest planet and self-destruct.",
  TID_SHIP_CERBERUS_BOMBER: "Cerberus bomber",
  TID_SHIP_CERBERUS_BOMBER_DESCR: "A strong ship that regularly fires one rocket towards each participating player that has ships in the bomber's sector or any adjacent sectors. \\n\\nthis ship will always stay within its assigned sector, but the rockets can be fired on approaching ships in adjacent sectors.",
  TID_SHIP_STORM: "Cerberus storm",
  TID_SHIP_STORM_DESCR: "This ship always follows a circular path within its sector. it is equipped with a powerful long range weapon that regularly launches fast dart missiles against all enemy ships in range.",
  TID_SHIP_CERB_GHOSTS: "Cerberus ghosts",
  TID_SHIP_CERB_GHOSTS_DESCR: "A group of fast ships that jump in unpredictably and move collectively to the nearest target, anywhere in the star system.\\n\\nghost ships are immune to all modules that don't do damage, and do not count as ships for certain modules like barrage and salvage.",
  TID_CORP_FLAGSHIP: "Corporation flagship",
  TID_CORP_FLAGSHIP_DESCR: "This ship belongs to a corporation and can be controlled by its officers.\\n\\na flagship can optionally assist its owner corporation with one ongoing white star mission.",
  TID_SHIP_CERB_HYDRA: "Cerberus hydra",
  TID_SHIP_CERB_HYDRA_DESCR: "A massive, strong ship, equipped with a powerful barrage that does significantly more damage when there are more player ships in its sector. when it runs out of hitpoints, it will split into two smaller, weaker hydras. the smaller versions will themselves turn into two tiny hydras when destroyed.",
  TID_SHIP_CERB_HYDRA_1: "Cerberus hydra",
  TID_SHIP_CERB_HYDRA_1_DESCR: "A weaker version of the cerberus hydra. will split into two smaller hydras when destroyed.",
  TID_SHIP_CERB_HYDRA_2: "Cerberus hydra",
  TID_SHIP_CERB_HYDRA_2_DESCR: "The weakest version of the cerberus hydra. will disappear when destroyed.",
  TID_GHOST_SPAWNER_DESCR: "This mysterious gate is used by cerberus ghost ships to jump to new star systems. the gate cannot be targeted or used as a move target.",
  TID_MODULE_TRADER: "Trade boost",
  TID_MODULE_TRADER_DESCR: "While active, increases payout on shipment delivery.",
  TID_MODULE_TRANSPORT_CAPACITY: "Cargo bay extension",
  TID_MODULE_TRANSPORT_CAPACITY_DESCR: "Increases the total storage of the transport ship, allowing more shipments or artifacts to be carried at once.",
  TID_MODULE_MINING_BOOST: "Mining boost",
  TID_MODULE_MINING_BOOST_DESCR: "Provides a temporary boost to hydrogen collection speed.",
  TID_MODULE_EMP: "EMP",
  TID_MODULE_EMP_DESCR: "Disables all ships, rockets and cerberus stations within the affected area for a short period of time, including the ship that triggered the EMP. disabled ships do not move or fire, but can still activate modules.",
  TID_MODULE_SHIPMENT_COMPUTER: "Shipment computer",
  TID_MODULE_SHIPMENT_COMPUTER_DESCR: "Automatically picks up shipments from intermediate waypoints, if those shipments' destination matches any of the ship's subsequent waypoints. automatically picked up shipments add a bonus to their reward.\\n\\nafter this module is unlocked, selecting any object that holds shipments will reveal numeric indicators showing where the shipments are headed.",
  TID_MODULE_REPAIR: "Remote repair",
  TID_MODULE_WEAK_SHIELD: "Alpha shield",
  TID_MODULE_SHIELD: "Delta shield",
  TID_MODULE_STRONG_SHIELD: "Omega shield",
  TID_MODULE_SHIELD_DESCR: "Absorbs incoming damage until it is depleted or the activation timer runs out.",
  TID_MODULE_SHIELD_WITH_SPEED_DESCR: "Absorbs incoming damage until it is depleted or the activation timer runs out. owner ship travels faster while the shield is active.",
  TID_MODULE_REPAIR_DESCR: "Repairs a constant amount of hitpoints per second, shared among all damaged non-enemy ships within range.",
  TID_MODULE_TELEPORT: "Teleport",
  TID_MODULE_TELEPORT_DESCR: "After the activation delay, the ship teleports to the designated target, which must be within teleportation radius. cannot teleport inside barrier areas created by enemy ships.",
  TID_MODULE_TIME_WARP: "Time warp",
  TID_MODULE_TIME_WARP_DESCR: "Speeds up time in a radius around the ship. affects travel times, combat and artifact pickup speed.\\n\\nan object in range of multiple time warps is only affected by the highest level one.",
  TID_MODULE_BATTERY: "Battery",
  TID_MODULE_BATTERY_DESCR: "Does damage to a single target at a time.",
  TID_MODULE_LASER: "Laser",
  TID_MODULE_LASER_DESCR: "A powerful weapon that does increasingly higher damage the longer it stays focused on a single target.",
  TID_MODULE_WEAK_BATTERY: "Weak battery",
  TID_MODULE_WEAK_BATTERY_DESCR: "A weak weapon that does damage to a single target at a time.",
  TID_MINERAL_STORAGE_CAPACITY: "Hydrogen bay extension",
  TID_MINERAL_STORAGE_CAPACITY_DESCR: "Increases the maximum amount of hydrogen that a miner ship can carry.",
  TID_MODULE_REDSTAR_EXTENDER: "Red star life extender",
  TID_MODULE_REDSTAR_EXTENDER_DESCR: "Adds a small amount of time to a red star's life when activated near the star.",
  TID_MODULE_STEALTH: "Stealth",
  TID_MODULE_STEALTH_DESCR: "Activating ship evades enemy ship fire completely. it will not fire on enemies, or be fired on, for the duration of the effect.",
  TID_MODULE_MASS_MINING: "Remote mining",
  TID_MODULE_MASS_MINING_DESCR: "Simultaneously mines hydrogen from all asteroid fields in the same sector, at reduced speed.",
  TID_MODULE_UNITY: "Unity",
  TID_MODULE_UNITY_DESCR: "Increases damage per second for the owner ship when other allied players have ships present in the same sector. the increase is proportional to the number of allied players with ships in the sector.",
  TID_MODULE_UNITY_MINER: "Mining unity",
  TID_MODULE_UNITY_MINER_DESCR: "Increases mining speed for the activating ship, if other players are also mining in the same sector. the increase is proportional to the number of other players mining in the sector.",
  TID_MODULE_FORTIFY: "Fortify",
  TID_MODULE_FORTIFY_DESCR: "Reduces direct weapon damage received. all cerberus ships in the sector move toward the owner. enemy ships and bases prefer firing on the owner over all other potential targets.",
  TID_MODULE_SALVAGE: "Salvage",
  TID_MODULE_SALVAGE_DESCR: "Instantly restores a percentage of hull strength each time any ship (other than cerberus ghost) is destroyed in the same sector.",
  TID_MODULE_SUPRESS: "Suppress",
  TID_MODULE_SUPRESS_DESCR: "Prevents a single enemy ship from firing for a small period of time.",
  TID_MODULE_SHIPMENT_DRONE: "Shipment drone",
  TID_MODULE_SHIPMENT_DRONE_DESCR: "Launches a drone that will automatically pick up and deliver shipments when possible. the drone can only cross sectors if they are connected with an active warp lane.\\n\\nthe drone loads shipments to a single destination at a time. when it drops off more than one shipment, the entire delivery will yield a credit reward bonus proportional to the number of additional shipments delivered.",
  TID_MODULE_DESTINY: "Destiny",
  TID_MODULE_DESTINY_DESCR: "Does massive area damage to all enemy ships in range. initiator ship instantly jumps to a random asteroid in the star system. if there are no asteroids left, destiny cannot be activated.\\n\\nafter the jump, the ship stays disabled for a short period of time.\\n\\ncan only be activated if there are enemy ships in the sector.",
  TID_MODULE_LEAP: "Leap",
  TID_MODULE_LEAP_DESCR: "The owner ship initiates teleportation to the closest ally ship engaged in combat, anywhere in the current star system. after the activation delay period, and if the targeted ally is still alive, the owner ship will jump to the object closest to the ally ship. after the jump, both the owner ship and the ally ship are disabled for a small period of time.",
  TID_MODULE_BOND: "Bond",
  TID_MODULE_BOND_DESCR: "Creates a movement link with the targeted enemy ship. while the link is active, the enemy ship is unable to move independently. any movement from the owner ship will be reflected on the enemy ship, so that the distance between the two ships always remains the same.\\n\\nthe owner ship will not be affected by a barrier field activated by the enemy ship.\\n\\nthe enemy ship can break free from the link earlier by using bond on the original ship, or a module that causes teleportation.\\n\\ndoes not work on public red star level 7 or lower. a ship that has a cerberus under bond influence cannot teleport in a public red star.\\n\\ndoes not work against cerberus storm.",
  TID_MODULE_VENGEANCE: "Vengeance",
  TID_MODULE_VENGEANCE_DESCR: "Starts activating automatically when the owner ship drops below the hull strength threshold. once the activation delay passes, and if the owner ship is still not destroyed, a massive explosion will apply area damage to all enemy ships in range.",
  TID_MODULE_PASSIVE_SHIELD: "Passive shield",
  TID_MODULE_PASSIVE_SHIELD_DESCR: "A shield that is always active and can regenerate over time.\\n\\nthe shield only starts regenerating after it has stopped receiving damage for an amount of time equal to the regeneration delay.",
  TID_MODULE_MIRROR_SHIELD: "Mirror shield",
  TID_MODULE_MIRROR_SHIELD_DESCR: "Applies a percentage of the damage taken by this shield back to the attacker.",
  TID_MODULE_AREA_SHIELD: "Area shield",
  TID_MODULE_AREA_SHIELD_DESCR: "Absorbs hull damage taken by any allied ship in the effect area, including transports and miners.",
  TID_MODULE_BLAST_SHIELD: "Blast shield",
  TID_MODULE_BLAST_SHIELD_DESCR: "Protects the owner ship and all friendly ships within range against area damage only. direct weapon damage is not absorbed by this shield and is applied directly to the hull of the ship.",
  TID_MODULE_BARRIER: "Barrier",
  TID_MODULE_BARRIER_DESCR: "Creates a force field around the ship. enemy ships and rockets cannot move while inside the force field. enemy ships cannot use any object inside the effect area as a target for the teleport module.",
  TID_MODULE_IMPULSE: "Impulse",
  TID_MODULE_IMPULSE_DESCR: "Provides the owner a quick boost that helps it travel faster along its current route.",
  TID_MODULE_BARRAGE: "Barrage",
  TID_MODULE_BARRAGE_DESCR: "A battery that does additional damage to its single target when there are more enemy ships in the sector.\\n\\ncerberus ghosts do not count as enemies for additional damage.",
  TID_MODULE_HYDRO_UPLOAD: "Hydrogen upload",
  TID_MODULE_HYDRO_UPLOAD_DESCR: "Instantly uploads a percentage of collected hydrogen to your empire's reserves, without needing to return to a planet.",
  TID_MODULE_TRADE_BURST: "Trade burst",
  TID_MODULE_TRADE_BURST_DESCR: "Counts shipments delivered during the activation period. after a minimum threshold is met, every new credits shipment delivered by the owner ship while the module is still active will yield a bonus reward.",
  TID_MODULE_SHIPMENTBEAM: "Shipment beam",
  TID_MODULE_SHIPMENTBEAM_DESCR: "Instantly loads the lowest value shipments from any target outpost in the star system. does not work with artifacts or relics.",
  TID_MODULE_SANCTUARY: "Sanctuary",
  TID_MODULE_SANCTUARY_DESCR: "When the owner ship is about to be destroyed during combat or a supernova, it jumps back to its home system instead. any cargo on the ship will be lost.\\n\\nbattleships that get destroyed in a red star with sanctuary equipped will not be able to return to the same star.",
  TID_MODULE_CRUNCH: "Crunch",
  TID_MODULE_CRUNCH_DESCR: "Instantly collects hydrogen from all asteroid fields in the current sector (limited by the max amount and the miner ship's total capacity).",
  TID_MODULE_RECALL: "Recall",
  TID_MODULE_RECALL_DESCR: "Allows the transport ship to teleport to any trade station in the current star system.",
  TID_MODULE_ALPHAROCKET: "Alpha rocket",
  TID_MODULE_ALPHAROCKET_DESCR: "A fast but weak rocket that can be launched towards a single fixed target. the rocket explodes and does area damage to all enemy ships when it reaches its destination.\\n\\nenemy ships can fire on the rocket using normal targeting rules. no damage is applied if the rocket is destroyed before it reaches its destination.",
  TID_MODULE_DELTAROCKET: "Delta rocket",
  TID_MODULE_DELTAROCKET_DESCR: "A very fast rocket that does area damage to all enemy ships when it reaches its final destination. the owner can optionally set a second waypoint after the launch.\\n\\nenemy ships can fire on the rocket using normal targeting rules. no damage is applied if the rocket is destroyed before it reaches its destination.\\n\\ndoes not work on sectors with jump gates on white stars.",
  TID_MODULE_EMP_ROCKET: "EMP rocket",
  TID_MODULE_EMP_ROCKET_DESCR: "A rocket that disables all nearby ships on impact.",
  TID_MODULE_OMEGAROCKET: "Omega rocket",
  TID_MODULE_OMEGAROCKET_DESCR: "A strong, slow rocket that can be launched within a limited range and does massive area damage to all enemy ships when it reaches its destination.\\n\\nenemy ships can fire on the rocket using normal targeting rules. the rocket still delivers a small amount of area damage on a smaller radius to enemy ships if neutralized before reaching its destination.",
  TID_MODULE_ENRICH: "Enrich",
  TID_MODULE_ENRICH_DESCR: "Instantly increases the amount of hydrogen stored on all asteroids in the sector. cannot be used on the same sector more frequently than once per day.",
  TID_MODULE_RUSH: "Rush",
  TID_MODULE_RUSH_DESCR: "Increases the speed of the owner transport ship when it carries any shipments destined to the ship's next waypoint. the speed increase is proportional to the number of shipments destined to the next waypoint.",
  TID_MODULE_GENESIS: "Genesis",
  TID_MODULE_GENESIS_DESCR: "Instantly creates new asteroid fields on the miner's current sector.\\n\\ndoes not work on sectors with jump gates on white stars.",
  TID_MODULE_ENTRUST: "Entrust",
  TID_MODULE_ENTRUST_DESCR: "Allows the owner transport ship to instantly teleport its cargo to another transport ship in range. works with shipments and fully loaded artifacts and relics.",
  TID_MODULE_OFFLOAD: "Offload",
  TID_MODULE_OFFLOAD_DESCR: "When active, the transport ship will deliver all of its shipments upon arriving on a trade station, regardless of the shipments' actual destination. shipments not originally destined to the trade station will yield a reduced payoff.",
  TID_ALPHA_DRONE_MODULE_DESCR: "Launches a single combat drone towards a destination anywhere in the star system. the drone will automatically travel to the destination and stay there until destroyed or its activation timer runs out.\\n\\ndoes not work on sectors with jump gates on white stars.",
  TID_MODULE_MINING_DRONE: "Mining drone",
  TID_MODULE_MINING_DRONE_DESCR: "Launches an independent ship towards the target asteroid, which must be within range of miner ship. the drone will keep mining from the asteroid until it is depleted or its capacity fills up. after the mining is done, the drone will deposit the hydrogen to the closest planet and self destruct.",
  TID_MODULE_ROCKET_LAUNCHER_DESCR: "Launches one bomber rocket towards each enemy player that has ships in the bomber's sector or any adjacent sectors. each rocket travels towards the enemy player's closest ship.",
  TID_BOMBER_ROCKET_DESCR: "A strong rocket that causes area damage to all player ships when it reaches its destination. the rocket still delivers a smaller amount of area damage on a smaller radius if neutralized before reaching its destination.",
  TID_MODULE_DART_LAUNCHER: "Dart launcher",
  TID_MODULE_DART_LAUNCHER_DESCR: "Launches a dart missile against the targeted enemy ship at regular intervals.\\n\\nthe missile can be neutralized by any enemy ship using normal targeting rules.\\n\\nwhen the missile reaches its destination it will apply direct weapon damage to the target ship only, and only if the target ship is still within the impact area.\\n\\nthis weapon will only fire on enemy ships. rockets and cerberus stations are ignored.",
  TID_DART_MISSILE_DESCR: "A missile that is launched against a single ship. once the missile reaches its destination, it will apply damage to the target ship if that ship is within the explosion range.",
  TID_MODULE_DISPATCH: "Dispatch",
  TID_MODULE_DISPATCH_DESCR: "The transport ship initiates teleport to the planet with the most items (shipments, artifacts or relics) in the star system. if more than one planets have the same amount of items, the farthest planet is picked.\\n\\nthe teleport completes after the preparation time elapses. the preparation time is proportional to the amount of items on the target planet at the time of activation.",
  TID_MODULE_HYDRO_ROCKET: "Hydrogen rocket",
  TID_MODULE_HYDRO_ROCKET_DESCR: "Allows the miner ship to launch a powerful rocket, anywhere in the star system.\\n\\nto activate, the miner ship must have collected at least the required hydrogen amount. the hydrogen is consumed on activation.",
  TID_HYDRO_ROCKET_DESCR: "A powerful rocket launched by a miner ship. the rocket explodes and does area damage to all enemy ships when it reaches its destination.\\n\\nenemy ships can fire on the rocket using normal targeting rules. no damage is applied if the rocket is destroyed before it reaches its destination.",
  TID_MODULE_DART_BARRAGE_DESCR: "Regularly fires a fast dart missile against all enemy ships in range.",
  TID_MODULE_SUSPEND: "Suspend",
  TID_MODULE_SUSPEND_DESCR: "Slows down time in a large area around the ship. overrides any effect of time warp within the effect area.\\n\\nan object in range of multiple suspend areas is only affected by the highest level one.",
  TID_MODULE_RECOIL: "Recoil",
  TID_MODULE_RECOIL_DESCR: "The flagship enters a teleport countdown, heading anywhere in the star system. after the countdown ends, the flagship will jump to the destination and will immediately enter a second teleport countdown, heading back to its original position.",
  TID_MODULE_IMMOLATION: "Immolation",
  TID_MODULE_IMMOLATION_DESCR: "Instantly destroys all cerberus ships in the sector.",
  TID_MODULE_HYDRA_BARRAGE: "Hydra barrage",
  TID_MODULE_HYDRA_BARRAGE_DESCR: "A strong battery that does additional damage to its single target when there are more enemy ships in the sector.\\n\\ndps against single ship: N\\nadditional dps per ship in sector: X",
  TID_MODULE_REMOTE_BOMB: "Remote bomb",
  TID_MODULE_REMOTE_BOMB_DESCR: "Leaves a stationary bomb at the ship's current location. the bomb will start triggering once an enemy ship enters the blast range. all enemy ships within the blast range will take area damage after the trigger period is over. the bomb can be targeted by enemy ships using regular targeting rules. if neutralized before the trigger period expires, it will apply less area damage across a smaller range.\\n\\nnot affected by area damage.\\n\\nnot useable in yellow stars.",
  TID_REMOTE_BOMB_DESCR: "A stationary bomb that will start triggering once an enemy ship enters its blast range. all enemy ships within the blast range will take area damage after the trigger period is over. the bomb can be targeted by enemy ships using regular targeting rules. if neutralized before the trigger period expires, it will apply less area damage across a smaller range.",
  TID_CERB_STATION_HOME1: "Weak cerberus base",
  TID_CERB_STATION_HOME2: "Cerberus base",
  TID_CERB_STATION_HOME3: "Strong cerberus base",
  TID_CERB_STATION_HOME_DESCR: "Spawns cerberus ships daily. do not attempt to approach before building a sizeable combat fleet.",
  TID_TRADEITEM_ARTIFACT_COMBAT_1: "Orb level 1",
  TID_TRADEITEM_ARTIFACT_COMBAT_2: "Orb level 2",
  TID_TRADEITEM_ARTIFACT_COMBAT_3: "Orb level 3",
  TID_TRADEITEM_ARTIFACT_COMBAT_4: "Orb level 4",
  TID_TRADEITEM_ARTIFACT_COMBAT_5: "Orb level 5",
  TID_TRADEITEM_ARTIFACT_COMBAT_6: "Orb level 6",
  TID_TRADEITEM_ARTIFACT_COMBAT_7: "Orb level 7",
  TID_TRADEITEM_ARTIFACT_COMBAT_8: "Orb level 8",
  TID_TRADEITEM_ARTIFACT_COMBAT_9: "Orb level 9",
  TID_TRADEITEM_ARTIFACT_COMBAT_10: "Orb level 10",
  TID_TRADEITEM_ARTIFACT_COMBAT_11: "Orb level 11",
  TID_TRADEITEM_ARTIFACT_UTILITY_1: "Blue crystal level 1",
  TID_TRADEITEM_ARTIFACT_UTILITY_2: "Blue crystal level 2",
  TID_TRADEITEM_ARTIFACT_UTILITY_3: "Blue crystal level 3",
  TID_TRADEITEM_ARTIFACT_UTILITY_4: "Blue crystal level 4",
  TID_TRADEITEM_ARTIFACT_UTILITY_5: "Blue crystal level 5",
  TID_TRADEITEM_ARTIFACT_UTILITY_6: "Blue crystal level 6",
  TID_TRADEITEM_ARTIFACT_UTILITY_7: "Blue crystal level 7",
  TID_TRADEITEM_ARTIFACT_UTILITY_8: "Blue crystal level 8",
  TID_TRADEITEM_ARTIFACT_UTILITY_9: "Blue crystal level 9",
  TID_TRADEITEM_ARTIFACT_UTILITY_10: "Blue crystal level 10",
  TID_TRADEITEM_ARTIFACT_UTILITY_11: "Blue crystal level 11",
  TID_TRADEITEM_ARTIFACT_SUPPORT_1: "Tetrahedron level 1",
  TID_TRADEITEM_ARTIFACT_SUPPORT_2: "Tetrahedron level 2",
  TID_TRADEITEM_ARTIFACT_SUPPORT_3: "Tetrahedron level 3",
  TID_TRADEITEM_ARTIFACT_SUPPORT_4: "Tetrahedron level 4",
  TID_TRADEITEM_ARTIFACT_SUPPORT_5: "Tetrahedron level 5",
  TID_TRADEITEM_ARTIFACT_SUPPORT_6: "Tetrahedron level 6",
  TID_TRADEITEM_ARTIFACT_SUPPORT_7: "Tetrahedron level 7",
  TID_TRADEITEM_ARTIFACT_SUPPORT_8: "Tetrahedron level 8",
  TID_TRADEITEM_ARTIFACT_SUPPORT_9: "Tetrahedron level 9",
  TID_TRADEITEM_ARTIFACT_SUPPORT_10: "Tetrahedron level 10",
  TID_TRADEITEM_ARTIFACT_SUPPORT_11: "Tetrahedron level 11",
  TID_PLANET_DESERT_1: "Small desert planet",
  TID_PLANET_DESERT_2: "Desert planet",
  TID_PLANET_DESERT_3: "Large desert planet",
  TID_PLANET_DESERT_DESCR: "Desert planets produce lower reward shipments and provide ample space for storing hydrogen.",
  TID_PLANET_LAVA_1: "Small fire planet",
  TID_PLANET_LAVA_2: "Fire planet",
  TID_PLANET_LAVA_3: "Large fire planet",
  TID_PLANET_LAVA_DESCR: "Fire planets produce decent reward shipments and give your empire a small income of credits and hydrogen per hour.",
  TID_PLANET_WATER_1: "Small water planet",
  TID_PLANET_WATER_2: "Water planet",
  TID_PLANET_WATER_3: "Large water planet",
  TID_PLANET_WATER_DESCR: "Water planets produce decent reward shipments and give your empire a steady income of credits per hour.",
  TID_PLANET_TERRAN_1: "Small terran planet",
  TID_PLANET_TERRAN_2: "Terran planet",
  TID_PLANET_TERRAN_3: "Large terran planet",
  TID_PLANET_TERRAN_DESCR: "Terran planets produce regular reward shipments and give your empire a small income of hydrogen per hour.",
  TID_PLANET_GAS_1: "Gas planet",
  TID_PLANET_GAS_2: "Gas giant",
  TID_PLANET_GAS_DESCR: "Gas planets produce regular reward shipments and give your empire a small income of credits per hour.",
  TID_PLANET_ICE: "Ice planet",
  TID_PLANET_ICE_DESCR: "Ice planets produce high reward shipments and give your empire a steady income of credits and hydrogen per hour.",
  TID_PLANET_DESTROYED: "Dying planet",
  TID_PLANET_DESTROYED_DESCR: "This planet may hold ancient artifacts, useful for researching new modules.",
  TID_YELLOW_STAR: "Yellow star",
  TID_YELLOW_STAR_DESCR: "Yellow stars contain numerous habitable planets and are great for building base infrastructure. each empire is assigned its own yellow star to establish its base of operations.",
  TID_RED_STAR: "Red star",
  TID_RED_STAR_INFO: "Red stars are very unstable. they usually contain uninhabitable planets with artifacts.",
  TID_WHITE_STAR: "White star",
  TID_WHITE_STAR_INFO: "As the only source of relics, white stars are highly sought after by corporations in the hades galaxy.",
  TID_BLUE_STAR: "Blue star",
  TID_BLUE_STAR_INFO: "This dangerous system has a very limited lifetime and collapses from the outside toward the star.\\n\\nthe star will do direct damage to any ship in its sector.",
  TID_ACHIEVEMENT_SHIPMENTS: "Shipment delivery",
  TID_ACHIEVEMENT_SHIPMENTS_DESCR: "Deliver a total of N shipments",
  TID_ACHIEVEMENT_UPGRADEPLANET: "Planet upgrade",
  TID_ACHIEVEMENT_UPGRADEPLANET_DESCR: "Upgrade one of your planets to level",
  TID_ACHIEVEMENT_FLEETSIZE: "Fleet size",
  TID_ACHIEVEMENT_FLEETSIZE_DESCR: "Increase your fleet size to",
  TID_ACHIEVEMENT_COMMONMINERALS: "Hydrogen collector",
  TID_ACHIEVEMENT_COMMONMINERALS_DESCR: "Collect N hydrogen from asteroid fields",
  TID_ACHIEVEMENT_NUMBERARTIFACTS: "Artifact hunter",
  TID_ACHIEVEMENT_NUMBERARTIFACTS_DESCR: "Research N artifacts",
  TID_ACHIEVEMENT_PLANETSCOLONIZED: "Colonizer",
  TID_ACHIEVEMENT_PLANETSCOLONIZED_DESCR: "Colonize N planets",
  TID_ACHIEVEMENT_SECTORUNLOCKED: "Yellow star explorer",
  TID_ACHIEVEMENT_SECTORUNLOCKED_DESCR: "Reveal N sectors in your home star",
  TID_ACHIEVEMENT_TAX: "Shipment assistant",
  TID_ACHIEVEMENT_TAX_DESCR: "Pay a total of N cr in shipment rewards to other players by picking up shipments from their planets",
  TID_ACHIEVEMENT_RELATIONSHIP: "Stable relationship",
  TID_ACHIEVEMENT_RELATIONSHIP_DESCR: "Maintain uninterrupted diplomatic relations with another player for N days",
  TID_ACHIEVEMENT_CERBFLEETSDESTROYED: "Slayer of the guardians",
  TID_ACHIEVEMENT_CERBFLEETSDESTROYED_DESCR: "Destroy a total of N cerberus ships",
  TID_ACHIEVEMENT_CRINCOME: "Credits tycoon",
  TID_ACHIEVEMENT_CRINCOME_DESCR: "Maintain total income of N credits per day for 7 continuous days",
  TID_ACHIEVEMENT_HYDROINCOME: "Hydrogen tycoon",
  TID_ACHIEVEMENT_HYDROINCOME_DESCR: "Maintain total income of N hydrogen per day for 7 continuous days",
  TID_ACHIEVEMENT_WS: "Team player",
  TID_ACHIEVEMENT_WS_DESCR: "Participate in N white star missions",
  TID_ACHIEVEMENT_WS_HYDRO: "Collector",
  TID_ACHIEVEMENT_WS_HYDRO_DESCR: "Deposit N hydrogen on white star planets",
  TID_ACHIEVEMENT_WS_RELICS: "Steward",
  TID_ACHIEVEMENT_WS_RELICS_DESCR: "Retrieve N relics for your corporation",
  TID_ACHIEVEMENT_WS_REWARDS: "Affluent",
  TID_ACHIEVEMENT_WS_REWARDS_DESCR: "Collect N credits in rewards from participating in white star missions",
  TID_ACHIEVEMENT_BS_WINS: "Blue star warrior",
  TID_ACHIEVEMENT_BS_WINS_DESCR: "Win N blue star matches",
  TID_HUD_CREDITS: "Credits",
  TID_HUD_HYDROGEN: "Hydrogen",
  TID_HUD_CRYSTALS: "Crystals",
  TID_STATUS_LOADING_ARTIFACT: "Loading artifact",
  TID_STATUS_DESTROYING_PLANET: "Destroying planet",
  TID_STATUS_NOT_TRIGGERED: "Not triggered",
  TID_STATUS_TRIGGERING: "Triggering...",
  TID_OBJ_ACTION_CANCEL_BUILD: "Cancel construction",
  TID_OBJECT_ACTION_MOVE: "Move",
  TID_OBJECT_ACTION_PLAYER_INFO: "Player info",
  TID_OBJECT_ACTION_ARTIFACTS: "Artifacts",
  TID_CERBERUS_STATION_SPAWNING_IN: "Spawning new fighters in",
  TID_OBJECT_ACTION_INFO: "Info",
  TID_CR_ASTEROID_CONTAINS: "Contains  <quad class=''cr''>.",
  TID_DIPLOMACTY_DLG_INCOMING_REQUEST_PLAYER_INFO: "Player info",
  TID_LINK_DEVICE_DLG_FIRSTPAGE_DESCR: "Use this page if you want to access your account from another device.\\n\\nwhich device are you on now?",
  TID_CORP_NAME_LABEL: "Name",
  TID_CORP_DESCR_LABEL: "Description",
  TID_PLAYER_INFO_XP_DESCR: "Xp level indicates a player's general progress in the galaxy. delivering shipments and upgrading planets increases the xp level.",
  TID_PLAYER_INFO_INFLUENCE_TITLE: "Influence",
  TID_PLAYER_INFO_INFLUENCE_DESCR: "Influence indicates a player's operational capability. influence can be earned (or lost) by participating in red star missions.",
  TID_PLAYER_INFO_DLG_TAB_ACHIEVEMENTS: "Achievements",
  TID_MODULE_BLUEPRINTS_LOCKED_MODULE_INFO: "Research more N artifacts for a chance to discover this module",
  TID_MODULE_BLUEPRINTS_INFO: "This screen shows available modules.\\n\\nto discover new modules or upgrade existing ones, you need to find blueprints by researching artifacts retrieved in red stars.\\n\\nnewly discovered modules must be researched before you can install them on your ships.",
  TID_MODULE_LEVEL_0_DESCR: "Unlock",
  TID_PLAYER_INFO_STAR_FRAGMENTS_DESCR: "Star fragments are earned by participating in blue star missions. they can be used to climb the monthly blue star leaderboards and to receive guaranteed crystal rewards at the end of each blue star season.",
  TID_PLAYER_INFO_WS_POINTS_DESCR: "White star points are earned by contributing in white star missions. they can be used to climb the monthly white star leaderboards and to receive guaranteed crystal rewards at the end of each white star season.",
  TID_PRODUCTION_DLG_SHIPS: "Ships",
  TID_PRODUCTION_DLG_STATIONS: "Space stations",
  TID_UPGRADE_TRANSPORT_DESIGN: "Permanently upgrade transports to\\nlevel N?",
  TID_UPGRADE_BS_DESIGN: "Permanently upgrade battleships to\\nlevel N?",
  TID_STAT_SHIP_DESIGN_BUILD_COST: "Production cost",
  TID_STAT_SHIP_DESIGN_BUILD_COST_DESCR: "The cost in credits to produce a new ship of this type.",
  TID_NO_SHIPMENTS_INFO: "No shipments currently available. new shipments will appear over time.\\n\\nupgrading the planet also adds more shipments on the planet and all its moons.",
  TID_TRADE_DLG_DESTINATION_COLUMN: "Destination",
  TID_BUY_ARTIFACT_DLG_DESCR_ORB: "Research will yield total blueprints for weapon or shield modules",
  TID_BUY_ARTIFACT_DLG_DESCR_BLUECRYSTAL: "Research will yield total blueprints for trade or mining modules",
  TID_BUY_ARTIFACT_DLG_DESCR_TETRAHEDRON: "Research will yield total blueprints for support modules",
  TID_SHIP_UPGRADE_DLG_TITLE: "Modules",
  TID_SHIP_UPGRADE_EFFECT_JOB_PAYOUT_INCREASE: "Shipment reward bonus",
  TID_SHIP_UPGRADE_EFFECT_TRADE_SLOTS: "Additional slots",
  TID_MODULE_MINERAL_STORAGE_STAT: "Additional storage",
  TID_MODULE_MINING_SPEED_STAT: "Mining speed",
  TID_MODULE_COOLDOWN_STAT: "Cooldown",
  TID_MODULE_AOE_STAT: "Area damage",
  TID_MODULE_REPAIR_STAT: "Hp repaired",
  TID_MODULE_TIME_WARP_STAT: "Time factor",
  TID_MODULE_RED_STAR_EXTENSION_STAT: "Life extension",
  TID_MODULE_INSTALL_PRICE_STAT: "Install price",
  TID_MODULE_MAX_TARGETS: "Max targets",
  TID_SHIP_UPGRADE_EFFECT_BONUS_REWARD: "Bonus reward",
  TID_SHIP_UPGRADE_EFFECT_FUEL_INCREASE: "Additional hydrogen use",
  TID_MODULE_DESCR_ACTIVATION_COST: "Activation cost",
  TID_MODULE_DESCR_DPS: "Damage per second",
  TID_MODULE_DESCR_DPADT: "Additional damage",
  TID_MODULE_DESCR_MAX_DPS: "Maximum damage per second",
  TID_MODULE_DESCR_TARGET_SWITCH_DELAY: "Target switch delay",
  TID_MODULE_DESCR_MAX_DPS_TIME: "Time to maximum damage",
  TID_MODULE_SALVAGE_HULL_DESCR: "Hull repaired per destroyed ship",
  TID_MODULE_DESCR_UNITY: "Damage increase per player",
  TID_MODULE_DESCR_UNITY_MINER: "Speed increase per player",
  TID_MODULE_DAMAGE_REDUCTION_PCT: "Damage reduction",
  TID_MODULE_SHIELD_STRENGTH_STAT: "Shield strength",
  TID_MODULE_MIRROR_DAMAGE_STAT: "Damage mirrored",
  TID_MODULE_ATTACK_RANGE_DESCR: "Attack range",
  TID_MODULE_EFFECT_RANGE_DESCR: "Effect range",
  TID_MODULE_EFFECT_DURATION_DESCR: "Effect duration",
  TID_MODULE_HYDRO_UPLOAD_PERCENT: "Percent uploaded",
  TID_MODULE_TRADEBURST_THRESHOLD: "Threshold",
  TID_MODULE_BONUS_PER_SHIPMENT: "Bonus per additional shipment",
  TID_MODULE_SHIPMENTBEAM_MAX_SHIPMENTS: "Max shipments",
  TID_SHIP_MODULE_SLOT_TYPE_0: "Trade",
  TID_SHIP_MODULE_SLOT_TYPE_1: "Mining",
  TID_SHIP_MODULE_SLOT_TYPE_2: "Support",
  TID_SHIP_MODULE_SLOT_TYPE_3: "Weapon",
  TID_SHIP_MODULE_SLOT_TYPE_4: "Shield",
  TID_MODULE_SHIELD_REGEN_DELAY: "Regeneration delay",
  TID_MODULE_SHIELD_FULL_REGEN_TIME: "Full regeneration time",
  TID_MODULE_MASS_BATTERY: "Mass battery",
  TID_MODULE_MASS_BATTERY_DESCR: "Simultaneously fires on multiple enemies within firing range.",
  TID_MODULE_DUAL_LASER: "Dual laser",
  TID_MODULE_DUAL_LASER_DESCR: "Fires a laser beam against up to two enemies within range. damage ramps up over time if both beams are active.",
  TID_MODULE_CRUNCH_MAX_AMOUNT: "Max amount",
  TID_MODULE_TRIGGER_TIME: "Trigger time",
  TID_MODULE_PROJECTILE_DAMAGE: "Explosion damage",
  TID_MODULE_PROJECTILE_DAMAGERANGE: "Explosion range",
  TID_MODULE_SECONDARY_DAMAGE: "Neutralized damage",
  TID_MODULE_SECONDARY_RANGE: "Neutralized damage range",
  TID_MODULE_ENRICH_INCREASE: "Hydrogen increase",
  TID_MODULE_RUSH_SPEED_INCR: "Speed increase",
  TID_MODULE_GENESIS_MAX_ASTEROIDS: "Max new asteroids",
  TID_MODULE_GENESIS_MAX_HYDRO: "Max new hydrogen",
  TID_OFFLOAD_MODULE_PAYOFF: "Payoff",
  TID_MODULE_ACTIVATION_PREP_TIME: "Activation delay",
  TID_MODULE_HULL_THRESHOLD_STAT: "Hull strength threshold",
  TID_DISPATCH_PREP_TIME: "Preparation time per item",
  TID_REQUIRED_HYDROGEN: "Required hydrogen",
  TID_MISSIONS_DLG_RED_STAR_SUPERNOVA_TIMER: "Supernova in",
  TID_MISSIONS_DLG_RED_STAR_SEARCH_TYPE_PUBLIC_DESCR: "Anyone can join this red star.",
  TID_MISSIONS_DLG_RED_STAR_SEARCH_TYPE_PRIVATE_DESCR: "Only corporation members can join this red star. the scan will be posted on the corporation chat page.",
  TID_MISSIONS_DIALOG_SEARCH_INFLUENCE_INFO: "Destroy enough cerberus ships and retrieve artifacts in this red star to receive N-X influence.",
  TID_BS_SHIP_JUMP_INFO: "Your ship will jump automatically when the blue star is discovered.",
  TID_BS_CREDIT_REWARD_DESCR: "The credit reward is calculated as N% of the rebuild cost for the battleship sent to the blue star.\\n\\nyou will always receive the reward if you lose your ship in the blue star. you will also receive it for the first blue star win every X.",
  TID_BS_HYDRO_REWARD_INFO: "The hydrogen awarded depends on your final standing in the blue star, and your empire's maximum storage capacity. there is also a maximum amount of hydrogen that can be earned per day.",
  TID_BS_FRAGMENTS_REWARD_DESCR: "Every blue star mission will award blue star fragments according to your final standing. collect these fragments to power the shipment relay station, climb the blue star leaderboards, and to receive guaranteed crystal rewards at the end of every season.\\n\\nfor more information, <a name=''__bsldb''>see the blue star leaderboards</a>.",
  TID_PLAYER_DIPLOMACY_DLG_TRADE_INFO: "Diplomatic relations established N ago, total tax collected by this player's activity: X cr",
  TID_ASTEROID_FIELD_DESCR: "Asteroid fields contain hydrogen that can be collected over time using miner ships.",
  TID_CR_ASTEROID_FIELD: "Rich asteroid field",
  TID_CR_ASTEROID_FIELD_DESCR: "This special asteroid field will add a one off credit amount to the owner's empire when fully mined. rich asteroid fields are rare and only appear once per day per player in red stars.",
  TID_BS_ASTEROID_FIELD_DESCR: "This asteroid field has ran out of hydrogen and can only be used as a navigation waypoint.",
  TID_MOON_DESCR: "Moons produce shipments that can be delivered to other moons, planets or trade stations for a profit.",
  TID_STAR_OWNER_DESCR: "The owner of a star controls what other empires can access it, by establishing diplomatic relations.",
  TID_STAR_CONDITION_STABLE_DESCR: "This star is not under threat of supernova for the foreseeable future",
  TID_STAR_CONDITION_SUPERNOVA_DESCR: "This star will explode soon. any ships or structures left here will be destroyed.",
  TID_STAR_SYSTEM_SIZE_DESCR: "The larger the star system, the more it costs to move your ships, both in time and in hydrogen",
  TID_SECURITY_RATING_0_DESCR: "No combat between player-controlled forces can take place in this star system",
  TID_SECURITY_RATING_1_DESCR: "Your ships will open fire against any ships that belong to players from other corporations.",
  TID_SECURITY_RATING_2_DESCR: "Your ships will open fire against all other players' ships.",
  TID_FLEET_HULL_STRENGTH_MAX: "Max hull strength",
  TID_FLEET_HULL_STRENGTH_INFO: "The current and maximum hull strength for this ship. when hull strength points become 0, the ship is destroyed.",
  TID_FLEET_HULL_STRENGTH: "Hull strength",
  TID_FLEET_HEAL_RATE: "Repair rate",
  TID_FLEET_HEAL_RATE_DESCR: "The amount of hull points repaired per second, when the ship is docked on a planet or station in the home star.",
  TID_FLEET_SHIELD_STRENGTH: "Shield strength",
  TID_FLEET_SHIELD_STRENGTH_INFO: "Shields provide additional coverage on the ship's hull. once a shield is depleted, its hull starts taking damage.",
  TID_DESTROYER_AREADAMAGE: "Area damage amount",
  TID_FLEET_SENTINELS_SPAWNED: "Sentinels spawned",
  TID_FLEET_SENTINELS_SPAWNED_DESCR: "The number of sentinels that will appear after this ship is destroyed",
  TID_FLEET_DPM: "Damage per second",
  TID_FLEET_DPM_INFO: "The damage this ship does to the targeted enemy ship each second",
  TID_FLEET_SHIPMENT_INFO: "N (X)",
  TID_CERBERUS_STATION_SHIELD_REGEN_LABEL: "Shield regeneration",
  TID_CERBERUS_STATION_SHIELD_REGEN_DELAY: "Regeneration delay",
  TID_CERBERUS_STATION_SHIELD_REGEN_DELAY_INFO: "The amount of time it takes for the shield to start re-generating, after it takes any amount of damage.",
  TID_FLEET_MINERAL_CAPACITY_INFO: "When your hydrogen storage is fully used, return the ship to any of your planets to deposit the hydrogen.",
  TID_FLEET_HYDRO_USAGE: "Hydrogen used",
  TID_FLEET_HYDRO_USAGE_DESCR: "Total amount of hydrogen this ship uses during travel (including installed modules)",
  TID_FLEET_JUMP_HYDRO_USAGE: "Jump cost",
  TID_FLEET_JUMP_HYDRO_USAGE_DESCR: "Total amount of hydrogen this ship uses when jumping to another system",
  TID_FLEET_SLOTS_0_DESCR: "The number of slots this ship has for installing trade modules",
  TID_FLEET_SLOTS_1_DESCR: "The number of slots this ship has for installing mining modules",
  TID_FLEET_SLOTS_2_DESCR: "The number of slots this ship has for installing support modules",
  TID_FLEET_SLOTS_3_DESCR: "The number of slots this ship has for installing weapon modules",
  TID_FLEET_SLOTS_4_DESCR: "The number of slots this ship has for installing shield modules",
  TID_PLANET_LEVEL_DESCR: "Planet level",
  TID_PLANET_LEVEL_INFO: "Higher level planets produce more shipments and can store more resources",
  TID_FLEET_SPEED: "Speed",
  TID_SHIPYARD_CAPACITY_DESCR: "The amount of ships your empire can support.",
  TID_BUILDING_LEVEL_DESCR: "Station level",
  TID_INFO_VALUE_PER_DAY: "N/d",
  TID_INSTALLED_MODULES_AREA_TITLE: "Installed modules",
  TID_SECTOR_UNLOCK_PRICE: "Scan price",
  TID_SECTOR_UNLOCK_TIME: "Scan time",
  TID_UNEXPLORED_SECTOR_DESCR: "An uncharted area of space. build a short range scanner in an adjacent sector to allow exploration.",
  TID_ASTERID_FIELD_CREDIT_REWARD: "Credits stored",
  TID_STATION_UPG_SHIPMENT_YIELD_DESCR: "The total credit reward this station's shipments generate, adjusted per hour.",
  TID_NUM_SHIPMENTS_PER_HR: "Shipments per hour",
  TID_NUM_SHIPMENTS_PER_HR_DESCR: "The average number of shipments this planet generates on each hourly refresh cycle.",
  TID_NUM_SHIPMENTS_MAX_DESCR: "The maximum amount of shipments this planet can hold.",
  TID_REDSCANNER_MAX_BATTLESHIPS: "Battleship limit",
  TID_REDSCANNER_MAX_INFLUENCE: "Maximum influence",
  TID_REDSCANNER_MAX_INFLUENCE_DESCR: "The maximum amount of influence the owner player can achieve by running red stars at the maximum level allowed by this scanner.",
  TID_REDSCANNER_CREDITS_PER_DAY: "Rich asteroid amount",
  TID_REDSCANNER_CREDITS_PER_DAY_DESCR: "The amount of credits that can be earned per day by mining rich asteroids in the maximum level red star allowed by this scanner.",
  TID_REDSCANNER_OPTIMAL_INFLUENCE: "Optimal influence",
  TID_REDSCANNER_OPTIMAL_INFLUENCE_DESCR: "Sucess in maximum level red stars allowed by this scanner will yield the most influence gain if the player's influence is lower than this value.",
  TID_TRANSPORT_CAPACITY: "Base cargo slots",
  TID_TRANSPORT_CAPACITY_DESCR: "The amount of slots available to load shipments and artifacts. additional modules may affect this capacity",
  TID_TRANSPORT_CAPACITY_TOTAL: "Total cargo slots",
  TID_TRANSPORT_CAPACITY_TOTAL_DESCR: "The amount of slots available to load shipments and artifacts, including effects of installed modules",
  TID_HYDRO_CAPACITY: "Base hydrogen capacity",
  TID_HYDRO_CAPACITY_DESCR: "The amount of storage available to store mined hydrogen. additional modules may affect this capacity",
  TID_HYDRO_CAPACITY_TOTAL_DESCR: "The total amount of storage available to store mined hydrogen, including effects of installed modules",
  TID_MINER_MINE_SPEED: "Mining speed",
  TID_MINER_MINE_SPEED_DESCR: "The base mining speed of this miner. installing new modules can affect this base value.",
  TID_MINER_AUTO_SECTORS: "Mining sectors",
  TID_MINER_AUTO_SECTORS_DESCR: "The number of sectors the miner will automatically mine from, before requiring new orders.",
  TID_DRONE_LIFETIME: "Lifetime",
  TID_DRONE_LIFETIME_DESCR: "Drones have a limited life time. once the timer expires, the drone will be destroyed.",
  TID_TIME_MODULATOR_SPEEDUP_FACTOR_DESCR: "Indicates the rate at which the time modulator increases passage of time.",
  TID_TIME_MODULATOR_MAX_TIME: "Max duration",
  TID_TIME_MODULATOR_MAX_TIME_DESCR: "The maximum amount of time the time modulator can stay active, before it needs recharging.",
  TID_TIME_MODULATOR_REGEN: "Recharge per day",
  TID_TIME_MODULATOR_REGEN_DESCR: "The amount of activation time the time modulator gains per day.",
  TID_RELAY_DURATION: "Activate duration",
  TID_RELAY_DURATION_DESCR: "The amount of time the relay will be active on each sector it covers.",
  TID_RELAY_SHIPMENTS_PER_HOUR_DESCR: "The maximum number of shipments that will be automatically delivered per hour, for each sector the relay is active on.",
  TID_RELAY_ACTIVATE_PRICE: "Activation price",
  TID_RELAY_ACTIVATE_PRICE_DESCR: "The amount of blue star fragments required to activate the relay on a single sector.",
  TID_RELAY_FRAGMENTS_STORED_DESCR: "The amount of blue star fragments currently stored on the station and available to be used for activation.",
  TID_RELAY_FRAGMENTS_MAX: "Max fragments",
  TID_RELAY_FRAGMENTS_MAX_DESCR: "The maximum amount of blue star fragments that can be stored on the station.",
  TID_RELAY_MAX_SECTORS: "Max sectors",
  TID_RELAY_MAX_SECTORS_DESCR: "The maximum amount of sectors that can have the relay active simultaneously.",
  TID_SPAWNER_DELAY: "Spawn delay",
  TID_SPAWNER_DELAY_DESCR: "The amount of time it takes for ships to spawn, after this jumpgate appears.",
  TID_SPAWNER_NUM_SPAWNED: "Ships spawned",
  TID_SPAWNER_NUM_SPAWNED_DESCR: "The amount of cerberus ships that will be spawned by this jumpgate.",
  TID_SPAWNER_MAX_RADIUS: "Max spawn radius",
  TID_SPAWNER_MAX_RADIUS_DESCR: "The maximum distance from the center of the jumpgate that spawned cerberus ships can appear.",
  TID_EMP_RESIST: "EMP resistance",
  TID_EMP_RESIST_DESCR: "Disable time is reduced by this percentage when the EMP module is used against this ship.",
  TID_LEADERBOARDS_DIALOG_COLUMN_NAME: "Name",
  TID_SHIP_STAT_XP_INFO: "Xp is gained when doing damage to other player's battleships in white stars.",
  TID_SHIP_XP_EVENT_INFO: "Send your battleships to collect xp on white stars!\\n\\nxp is collected when doing damage to other player's battleships. destroyed ships are removed from the leaderboard. ships with sanctuary will lose all collected xp when destroyed.\\n\\nat the end of the event, the owners of the top battleships will earn crystals:\\n\\ntop N: <quad class=''pc''>\\ntop X: <quad class=''pc''>\\ntop Y: <quad class=''pc''>",
  TID_PRIVATE_RS_EVENT_INFO: "Help your corporation succeed in private red stars and climb the leaderboards! every time a private red star ends, your corporation will gain points depending on the red star level, how many artifacts were collected, and how many cerberus ships cleared.\\n\\nevery member in a top corporation at the time the event ends will earn crystals:\\n\\ntop N: <quad class=''pc''>\\ntop X: <quad class=''pc''>\\ntop Y: <quad class=''pc''>",
  TID_BS_EVENT_INFO: "Participate in blue stars to earn fragments and win crystal rewards when the season ends.\\n\\nall participants will receive the following rewards if they exceed a certain fragment count at the end of the season:\\n\\nN or more fragments: <quad class=''pc''>\\nX or more fragments: <quad class=''pc''>\\nY or more fragments: <quad class=''pc''>\\n\\nin addition, players on the leaderboard when the event ends will receive the following rewards:\\n\\ntop N: <quad class=''pc''>\\ntop X: <quad class=''pc''>\\ntop N: <quad class=''pc''>",
  TID_WS_EVENT_INFO: "Participate in white stars to earn points based on your contribution and win crystal rewards when the season ends.\\n\\nall participants will receive the following rewards if they exceed a certain point count at the end of the season:\\n\\nN or more points: <quad class=''pc''>\\nX or more points: <quad class=''pc''>\\nY or more points: <quad class=''pc''>\\n\\nin addition, players on the leaderboard when the event ends will receive the following rewards:\\n\\ntop N: <quad class=''pc''>\\ntop X: <quad class=''pc''>\\ntop N: <quad class=''pc''>",
  TID_INFLUENCE_DECAY_INFO: "Players on this leaderboard lose 3% of their influence for every 3 days without a win in their maximum level red star.",
  TID_STARTER_PACK_DESCR: "Limit one per account",
  TID_CHAT_GLOBAL_INFO: "Messages you transmit here can be seen by all players. never give out personal information. please be respectful and polite.",
  TID_CHAT_WHITESTAR_INFO: "Messages you transmit here can only be seen by your corporation members.",
  TID_CHAT_JOINCORP_INFO: "Join a corporation to share knowledge and tactics with other players.\\n\\ncorporations also enable access to white stars and private red stars.",
  TID_CORP_UNLOCK_INFO: "Corporations unlock at level",
  TID_CHAT_LOCAL_LOCKED_INFO: "You have not established diplomatic relations with the owner of this star system.",
  TID_CHAT_WS_LOCKED_INFO: "Only participating corporations can use the white star chat.",
  TID_PLANET_UPG_CREDIT_STORE: "Credit storage",
  TID_PLANET_UPG_CREDIT_STORE_DESCR: "Contributes to the maximum amount of credits your empire can store",
  TID_PLANET_UPG_HYDROGEN_STORE: "Hydrogen storage",
  TID_PLANET_UPG_HYDROGEN_STORE_DESCR: "Contributes to the maximum amount of hydrogen your empire can store",
  TID_PLANET_UPG_SHIPMENT_YIELD_DESCR: "The total credit reward this planet's shipments generate, adjusted per hour",
  TID_PLANET_UPG_CREDIT_YIELD: "Credit yield",
  TID_PLANET_UPG_CREDIT_YIELD_DESCR: "The amount of credits per hour this planet earns for you",
  TID_PLANET_UPG_HYDROGEN_YIELD: "Hydrogen yield",
  TID_PLANET_UPG_HYDROGEN_YIELD_DESCR: "The amount of hydrogen per hour this planet earns for you",
  TID_DISTINCTION_PIONEER_DESCR: "This player has been in the hades galaxy since it was first discovered",
  TID_DISTINCTION_TOP1_DESCR: "This player has reached the number 1 position globally",
  TID_DISTINCTION_TOP1_10D_DESCR: "This player has held the number 1 position globally for more than 10 days",
  TID_DISTINCTION_TOP1_30D_DESCR: "This player has held the number 1 position globally for more than 30 days",
  TID_DISTINCTION_TOP10_DESCR: "This player has reached the top 10 players globally",
  TID_DISTINCTION_TOP50_DESCR: "This player has reached the top 50 players globally",
  TID_DISTINCTION_BS_TOP1_DESCR: "This player has reached the number 1 position on a blue star season.",
  TID_DISTINCTION_BS_TOP10_DESCR: "This player has reached the top 10 players on a blue star season.",
  TID_DISTINCTION_BS_TOP50_DESCR: "This player has reached the top 50 players on a blue star season.",
  TID_DISTINCTION_WS_TOP1_DESCR: "This player has reached the number 1 position on a white star season.",
  TID_DISTINCTION_WS_TOP10_DESCR: "This player has reached the top 10 players on a white star season.",
  TID_DISTINCTION_WS_TOP50_DESCR: "This player has reached the top 50 players on a white star season.",
  TID_RELIC_DLG_TITLE: "Relics",
  TID_PLANET_DESCR_GENERATING_RELIC: "Generating relic",
  TID_WHITE_STAR_SPECTATOR_INFO: "As a spectator, you cannot send ships to this white star.\\n\\nto actively participate on a white star, you must be included in the participants list at the time of the search.",
  TID_PLANET_INFO_RELIC_GENERATION_RATE_DESCR: "The amount of relics this planet generates on its own, adjusted per day.",
  TID_PLANET_INFO_HYDRO_PER_RELIC: "Hydrogen per relic",
  TID_PLANET_INFO_HYDRO_PER_RELIC_DESCR: "The amount of hydrogen that needs to be deposited on this planet, for it to create a new relic. smaller deposited quantities will still speed up relic generation.",
  TID_WHITE_STAR_PLANET_DESCR: "This planet generates a constant amount of relics every day. relics can be loaded on transport ships. depositing hydrogen with miners on this planet will speed up relic generation.",
  TID_WS_PREPARATION_PERIOD: "Preparation period",
  TID_WS_PREPARATION_PERIOD_DESCR: "During the preparation period, you can jump ships in and give them an initial move order. ships start moving once preparation is over.\\n\\nuse this time to discuss tactics with your corporation members. you can also schedule future orders for your ships, using the time machine.",
  TID_WS_REWARDS_MSG_DELETE_CONFIRM: "This message contains unclaimed rewards. are you sure you want to delete it?",
  TID_STAR_TIME_SLOWDOWN: "Time slowdown",
  TID_STAR_TIME_SLOWDOWN_DESCR: "Time passes by slower than normal in this star. one second in a yellow star lasts N seconds here.",
  TID_CORP_LEVELS_LABEL: "Corporation levels",
  TID_CORP_MAX_MEMBERS: "Max members",
  TID_CORP_PASSIVE_INCOME_BONUS: "Passive income bonus",
  TID_CORP_ARTIFACT_YIELD_BONUS: "Private red star artifacts research bonus",
  TID_CORP_MAX_FLAGSHIP_LEVEL: "Max flagship level",
  TID_WS_LABEL_REWARDS_PROGRESS_DESCR: "Increase the activity bar by dealing <color=''red''>damage</color> to enemy battleships, depositing <color=''#8c65feff''>hydrogen</color> or transferring <color=''#ffb800ff''>relics</color> out of the system.\\n\\nfill the activity bar and win this white star to maximize rewards.",
  TID_WS_TOGGLE_SPECTATE_DESCR: "If enabled by both participating corporations, this star will show on the active white stars dialog and can be viewed by anyone.",
  TID_EMPIRE_OBJECTIVES: "Objectives",
  TID_OBJ_LEVEL_INFO: "Finishing this objective within the time limit will unlock harder objectives with higher rewards.",
  TID_OBJ_UPGRADE_BUILDING_DESCR: "Upgrade your N to level X.",
  TID_OBJ_JOIN_CORP_DESCR: "Join an existing corporation, or create a new one.",
  TID_OBJ_RESEARCH_ARTIFACTS_DESCR: "Research N x X (or higher level).",
  TID_OBJ_SALVAGE_ARTIFACTS: "Artifact salvage",
  TID_OBJ_SALVAGE_ARTIFACTS_DESCR: "Salvage N x X (or higher level).",
  TID_OBJ_DESTROY_CERBERUS: "Destroy cerberus ships",
  TID_OBJ_DESTROY_CERBERUS_DESCR: "Destroy N x X.",
  TID_OBJ_MINE_RS: "Mine hydrogen in red stars",
  TID_OBJ_MINE_RS_DESC: "Collect a total of N hydrogen from asteroid fields in red stars. the total is updated when the miner ship returns from the red star via the jumpgate.",
  TID_USE_TRADE_MODULE: "Use trade module",
  TID_USE_SUPPORT_MODULE: "Use support module",
  TID_USE_MINING_MODULE: "Use mining module",
  TID_USE_SHIELD_MODULE: "Use shield module",
  TID_USE_SHIPMENT_COMPUTER: "Use shipment computer to automatically pick up N shipments.",
  TID_USE_SHIPMENT_DRONE: "Use shipment drone to gain N credits in delivery bonuses.",
  TID_USE_TRADEBOOST: "Collect N credits from trade boost or trade burst bonuses.",
  TID_USE_EMP: "Use EMP to disable N enemy ships.",
  TID_USE_REPAIR: "Use remote repair to restore N hp to other player's ships.",
  TID_UPLOAD_HYDRO_RS: "Use hydrogen upload to transfer a total of N hydrogen from red stars.",
  TID_USE_CRUNCH: "Collect a total of N hydrogen using crunch.",
  TID_OBJECTIVE_DO_RESEARCH_DESCR: "Build a research station to deliver and research the artifact you retrieved in the red star.",
  TID_OBJECTIVE_DO_INSTALL_MODULE_DESCR: "Install the recently discovered cargo bay extention module on 2 transport ships.",
  TID_OBJ_DELIVER_SHIPMENTS_DESCR: "Use transport ships to deliver N planet shipments.",
  TID_OBJECTIVE_UPGRADE_PLANET_DESCR: "Upgrade N to level X.",
  TID_OBJECTIVE_UPGRADE_TO_RS_DESCR: "Upgrade your red star scanner to level N.",
  TID_OBJECTIVE_GAIN_INFLUENCE: "Gain influence",
  TID_OBJECTIVE_GAIN_INFLUENCE_DESCR: "Gain a total of N influence by doing red star missions.",
  TID_OBJ_UPGRADE_MINER_DESCR: "Upgrade the design of your mining ships to level N.",
  TID_OBJ_REVEAL_SECTOR_DESCR: "Use your short range scanner to uncover a new sector in your star system.",
  TID_OBJ_CLEAR_CERB_HOME_STAR_DESCR: "Destroy all cerberus ships in your star system.",
  TID_OBJECTIVE_REACH_INFLUENCE_DESCR: "Reach a total of N influence.",
  TID_USE_DESTINY_NO_SANCT: "Use destiny N times on a red star level X or higher. the ship must not be equipped with sanctuary.",
  TID_DELIVER_SHIPMENT_BATCH: "Deliver shipments",
  TID_DELIVER_SHIPMENT_BATCH_DESCR: "Load a transport with at least N shipments that go to the same destination, then deliver the shipments. repeat X times.",
  TID_USE_ALPHA_ROCKET: "Apply a total of N damage to enemy ships using alpha rocket.",
  TID_USE_ENTRUST: "Use the entrust module to transfer a total of N level X artifacts to other player's ships in red stars level Y.",
  TID_PT_UPGRADE_PLANETS_DESCR: "Upgrade all your planets to level 5.",
  TID_PT_FILL_RESEARCH_DESCR: "Fill your research station with artifacts retrieved in red stars.",
  TID_OBJ_SECOND_SRS_DESCR: "Build a second short range scanner.",
  TID_OBJ_BUILD_TIME_MODULATOR_DESCR: "Build a time modulator station.",
  TID_OBJ_EARN_CREDITS_DESCR: "Earn a total of N credits by delivering planet or moon shipments.",
  TID_OBJ_INSTALL_MODULE_DESCR: "Research the battery weapon and install it on a battleship.",
  TID_USE_SALVAGE: "Use salvage to restore N hull strength on your ships.",
  TID_USE_SHIPMENTBEAM: "Use shipment beam to pick up N shipments remotely.",
  TID_USE_BLASTSHIELD: "Absorb N area damage using blast shield.",
  TID_USE_MININGDRONE: "Deliver N hydrogen using mining drone.",
  TID_USE_GENESIS: "Use genesis to create N new asteroid fields.",
  TID_USE_OFFLOAD: "Deliver N shipments using offload.",
  TID_WIN_BS_WITH_MODULE: "Win blue star with module",
  TID_WIN_BS_WITH_MODULE_DESCR: "Win a blue star using a battleship equipped with N.",
  TID_EARN_FRAGMENTS: "Earn blue star fragments",
  TID_EARN_FRAGMENTS_DESCR: "Earn a total of N star fragments by participating in blue star missions.",
  TID_CTRL_DLG_SELECTION_INFO: "Selection info",
  hyd: "hyd",
  AU: "AU",
  days: "d",
  hours: "h",
  min: "min",
  sec: "sec",
  WS: "WS",
  BS: "BS",
  typeModTrade: "Trade modules",
  typeModMining: "Mining modules",
  typeModWeapon: "Weapon modules",
  typeModShield: "Shield modules",
  typeModSupport: "Support modules",
  lvl: "lvl",
  home: "Home",
  content: "Content",
  UpgradeCost: "Upgrade Cost",
  UpgradeTime: "Upgrade time",
  cerbShield: "Cerberus shield",
  cerbWeapon: "Cerberus weapons",
  cerbSupport: "Cerberus module",
  cerberus: "Cerberus",
  sections: "Sections",
  flagshipModules: "Flagship modules",
  sectors: "Sectors",
  colonizationPlanets: "Colonization of planets",
  lvlsPlanets: "Planet improvement",
  planets: "Planets",
  stars: "Stars",
  CombatArt: "Orb",
  UtilityArt: "Blue crystal",
  SupportArt: "Tetrahedron",
  blueprints: "Blueprints drop for each level",
  GhostSpawnSecs: "Ghost Spawn",
  MoveUpdateSec: "Move delay",
  BlueStar_CRRewardRate: "Compensation from the cost of the battleship",
  BlueStar_CRRewardWinLimitPeriod: "Cooldown rewards",
  BlueStar_MaxHydroPerDayPct: "Maximum Hydrogen Reward",
  BlueStar_HydroPctPerPos: "Hydrogen reward percent of tank",
  BlueStar_Fragments: "Fragments per position",
  StarSectorDPS: "Star damage",
  ScoreNThresholds: "Actions for Tick",
  WSMaxBSPerPlayer: "Maximum battleships per player",
  WSMaxOtherPerPlayer: "Maximum ships of another type per player",
  WSLostBSTimeCooldown: "Cooldown lost battleship",
  WSLostOtherTimeCooldown: "Cooldown lost ships of another type",
  WSJumpBSTimeCooldown: "Cooldown after the jump battleship",
  WSJumpOtherTimeCooldown: "Cooldown after jumping another type of ship",
  WSScoreDamageModifier: "WS score battle modifier",
  WSScoreMiningModifier: "WS score mining modifier",
  WSScoreTransportModifier: "WS score transportation modifier",
  SafeInterceptorInPublicRS: "Neutral Interceptors on Public RS",
  NoCerbBondTeleportPRS: "Deny use of Cerberus + Bond + Teleport on Public RS",
  PubRSEMPReqEnemies: "Enemy in EMP zone is required before activation in the Public RS",
  BarrageMaxAdditionalEnemies: "Max. enemies for additional damage",
  UnityMaxDamageIncreasePct: "Max. damage",
  MaxShips: "Max. ships",
  ShipToSpawn: "Ship spawn",
  plan: "Plan",
  resetAll: "Reset everything",
  resetPlan: "Reset the plan",
  planetscalc: "Planet calculator",
  other: "Other",
  switchAccs: "Account switcher",
  open: "Open",
  ActivationDelayBS: "Cooldown (BS)",
  DisableTimeWS: "Disable time (WS)",
  BarrageMaxAdditionalEnemiesWS: "Max. enemies for additional damage (WS)",
  ProximityTriggerSecWS: "Trigger time (WS)"
};
module.exports = {
  data: data
};

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,