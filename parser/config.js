import { resolve } from 'path';

import { walkDir } from './utils/dir.js';
import program from './modules/program.js';

const PRETTIER_PRINT_WIDTH = 120; // чтоб массивы выстраивались в одну линию
const PRETTIER_TAB_WIDTH = 4;

export default Object.freeze({
    runnersPath: resolve('./runners'),
    pathRaw: resolve('./raw'),
    pathSave: resolve('./dist'),
    ignoreFiles: [ 'credits' ],
    get files() {
        const files = program.args
            .map((f) => resolve(f));

        if (files.length) {
            return files;
        }
        return walkDir(this.pathRaw)
            .filter((e) => (e !== undefined && e.endsWith('.csv')));
    },
    saveFile: {
        js: {
            opts: {
                parser: 'babel',
                trailingComma: 'all',
                printWidth: PRETTIER_PRINT_WIDTH,
                tabWidth: PRETTIER_TAB_WIDTH,
            },
            formatting(content, runnerName = null) {
                runnerName = (!runnerName || runnerName === 'Runner') ? 'default' : `${runnerName}.js`;

                return `
                // generated by ${runnerName} runner

                export default ${JSON.stringify(content)}
            `;
            },
        },
        json: {
            opts: {
                parser: 'json',
                trailingComma: 'es6',
                printWidth: PRETTIER_PRINT_WIDTH,
                tabWidth: PRETTIER_TAB_WIDTH,
            },
            formatting(content) {
                return JSON.stringify(content);
            },
        },
    },
});
