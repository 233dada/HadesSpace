{"version":3,"sources":["C:/Users/Admin/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/bundle-url.js","C:/Users/Admin/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/bundle-loader.js","../js/planetsCalc.js","C:/Users/Admin/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/loaders/browser/js-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError","start","updatePageData","loadUserData","selects","document","querySelectorAll","data","JSON","parse","localStorage","getItem","select","index","isPlan","obj","val","planets","Name","$","value","i","children","prop","result","getSafeVar","mode","path","undefined","obj1","updateCol","dataOutput","num1","num2","plan","Object","keys","forEach","v","textContent","toLocaleString","calculateTotal","planka","indexOf","dataTotal","PlanIndexLvl","ActuallyIndexLvl","actually","level","levels","fixTime","plankalvl","plankaIndex","modifiers","formatResult","htmlElem","css","m","yellowstarTable","customTable","TID","lvl","maxLevel","append","getStr","class","td","text","outerHTML","html","colspan","style","MaxUpgradeLevel","push","generatePageTables","window","changeLvl","planetIndex","planet","setItem","stringify","reset","msg","confirm","removeItem","location","reload","sec","days","Math","floor","hours","min","round","script","createElement","async","charset","src","onerror","onload","getElementsByTagName","appendChild"],"mappings":"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","file":"planetsCalc.06baf20a.js","sourceRoot":"..\\pages","sourcesContent":["var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","\"use strict\";\r\nimport 'regenerator-runtime/runtime'\r\n\r\nexport async function start() {\r\n    let planets = await import('../data/planetsData').then((m) => m.data.yellowstarTable)\r\n    let levels = await import('../data/planet_levelsData').then((m) => m.data)\r\n    let dataOutput = ['CreditStorage', 'FuelStorage', 'CreditsPerHour', 'FuelPerHour', 'ShipmentsCRValuePerDay']\r\n    let modifiers = ['CreditStorageModifier', 'FuelStorageModifier', 'CreditIncomeModifier', 'FuelIncomeModifier', 'CreditShipmentModifier']\r\n    let dataTotal = ['Cost', 'TimeToUpgrade']\r\n    let customTable = {\r\n        Name: 'DONTFIXTABLE',\r\n        TID: planets.TID,\r\n        lvl: [],\r\n        plan: [],\r\n        maxLevel: planets.maxLevel\r\n    }\r\n\r\n    $('h1').append(`${getStr('planetscalc')}`);\r\n    $('body').append(`<title>${getStr('planetscalc')}</title>`);\r\n    $('body').append($('<table/>', {\r\n        class: 'planetsCalc'\r\n    }))\r\n    for (let i of dataOutput) {\r\n        let td = ''\r\n        let rows = ['actually', 'plan', 'result']\r\n\r\n        td += $('<td/>', { // имена rows \r\n            text: getStr(i)\r\n        })[0].outerHTML\r\n        rows.forEach(e => {\r\n            td += $('<td/>', {\r\n                id: i + e,\r\n                text: 0\r\n            })[0].outerHTML\r\n        })\r\n        $('table.planetsCalc').append($('<tr/>', {\r\n            html: td\r\n        }))\r\n    }\r\n    for (let i of dataTotal) {\r\n        let td = ''\r\n        td += $('<td/>', { // имена rows \r\n            text: getStr(i)\r\n        })[0].outerHTML\r\n        td += $('<td/>', {\r\n            id: i + 'result',\r\n            text: 0,\r\n            colspan: 3,\r\n            style: 'font-weight: bold'\r\n        })[0].outerHTML\r\n        $('table.planetsCalc').append($('<tr/>', {\r\n            html: td\r\n        }))\r\n    }\r\n    $('body').append($('<div/>', { // кнопки\r\n        class: 'resetButtons',\r\n        html: `<button class = \"resetButtonAll\" name=\"button\" onclick=\"reset()\">${getStr('resetAll')}</button>\r\n                <button name=\"button\" onclick=\"reset('plan')\">${getStr('resetPlan')}</button>`\r\n    }))\r\n    for (let i in planets.Name) {\r\n        let select = ''\r\n        for (let lvl = 0; planets.MaxUpgradeLevel[i] + 1 > lvl; lvl++) {\r\n            select += `<option>${lvl}</option>`\r\n        }\r\n        customTable.lvl.push(`<select onchange=\"changeLvl(this,'${i}')\"> ${select} </select>`)\r\n        customTable.plan.push(`<select onchange=\"changeLvl(this,'${i}', 'plan')\"> ${select} </select>`)\r\n    }\r\n    generatePageTables(customTable)\r\n        .then(() => loadUserData())\r\n\r\n    // колбек выбора лавлов \r\n    window.changeLvl = function (index, planetIndex, isPlan = false) {\r\n        let data = JSON.parse(localStorage.getItem('planetsCalc')) || {}\r\n        let planet = planets.Name[planetIndex]\r\n        index = index.value - 1\r\n        let obj\r\n\r\n        if (!data.actually) data.actually = {}\r\n        if (!data.plan) data.plan = {}\r\n        if (isPlan) {\r\n            obj = data.plan\r\n        } else {\r\n            obj = data.actually\r\n        }\r\n        obj[planet] = index + 1 || 0\r\n        index++\r\n        if (!isPlan) { // подогнать план под уровень\r\n            if (data.plan[planet]) {\r\n                if (data.plan[planet] < index) {\r\n                    data.plan[planet] = index\r\n                }\r\n            } else {\r\n                data.plan[planet] = index\r\n            }\r\n        }\r\n        localStorage.setItem('planetsCalc', JSON.stringify(data));\r\n        loadUserData()\r\n    }\r\n    // колбек кнопок\r\n    window.reset = function (isPlan) {\r\n        if (!isPlan) {\r\n            let msg = confirm(\"Reset all? Ar u serious ?\");\r\n            if (msg) {\r\n                localStorage.removeItem('planetsCalc')\r\n            } else {\r\n                return\r\n            }\r\n        } else {\r\n            let obj = JSON.parse(localStorage.getItem('planetsCalc')) || {}\r\n            if (obj.plan) {\r\n                for (let i in obj.plan) {\r\n                    obj.plan[i] = obj.actually[i]\r\n                }\r\n            } else {\r\n                obj.plan = {}\r\n            }\r\n            localStorage.setItem('planetsCalc', JSON.stringify(obj))\r\n        }\r\n        location.reload();\r\n    }\r\n    // вычислить данные\r\n    function updatePageData() {\r\n        let obj = JSON.parse(localStorage.getItem('planetsCalc')) || {}\r\n        let result = {}\r\n        let getSafeVar = (mode, path) => {\r\n            let value\r\n            try {\r\n                value = (result[mode][path] == undefined) ? 0 : result[mode][path]\r\n            } catch{\r\n                value = 0\r\n                result[mode] = {}\r\n            }\r\n            return value\r\n        }\r\n\r\n        if (!obj) return;\r\n        for (let mode in obj) {\r\n            let obj1 = obj[mode]\r\n            if (!obj1) return;\r\n            updateCol(mode, obj1);\r\n        }\r\n        for (let i of dataOutput) { // вычислить прирост плана\r\n            let num1 = getSafeVar('plan', i)\r\n            let num2 = getSafeVar('actually', i)\r\n            result.plan[i] = num1 - num2\r\n        }\r\n        updateCol('result', obj.plan)\r\n        if (Object.keys(result).length !== 0) { // отобразить данные\r\n            dataOutput.forEach(e => {\r\n                for (let mode in result) {\r\n                    let v = result[mode][e]\r\n                    if (!v) v = 0\r\n                    $('#' + e + mode)[0].textContent = (\r\n                        ((mode == 'plan' ? (v <= 0 ? '' : '+') : '')) // форматировать планы \r\n                        + v.toLocaleString()\r\n                    )\r\n                }\r\n            })\r\n        }\r\n        calculateTotal(obj)\r\n\r\n        function updateCol(mode, obj) {\r\n            for (let planka in obj) {\r\n                let plankalvl = obj[planka] - 1\r\n                let plankaIndex = planets.Name.indexOf(planka)\r\n                if (plankalvl == -1) continue\r\n                for (let i in dataOutput) {\r\n                    let num1, num2\r\n\r\n                    if (!result[mode]) result[mode] = {}\r\n                    if (mode == 'result') { // обновить результат\r\n                        num1 = getSafeVar('plan', dataOutput[i])\r\n                        num2 = getSafeVar('actually', dataOutput[i])\r\n                    } else {\r\n                        num1 = result[mode][dataOutput[i]] || 0\r\n                        if (modifiers[i]) {\r\n                            num2 = levels[dataOutput[i]][plankalvl] * planets[modifiers[i]][plankaIndex] / 100\r\n                        } else {\r\n                            num2 = levels[dataOutput[i]][plankalvl]\r\n                        }\r\n                    }\r\n                    result[mode][dataOutput[i]] = num1 + num2\r\n                    if (mode == 'result') formatResult(dataOutput[i])\r\n                }\r\n            }\r\n        }\r\n        function formatResult(i) {\r\n            let htmlElem = $('#' + i + 'result')[0]\r\n            let num1 = getSafeVar('result', i)\r\n            let num2 = getSafeVar('actually', i)\r\n            if (num1 > num2) {\r\n                $(htmlElem).css(\"color\", \"green\");\r\n            } else if (num1 < num2) {\r\n                $(htmlElem).css(\"color\", \"red\");\r\n            } else {\r\n                $(htmlElem).css(\"color\", \"\");\r\n            }\r\n        }\r\n        function calculateTotal(obj) {\r\n            for (let planka in obj.plan) {\r\n                let plankaIndex = planets.Name.indexOf(planka)\r\n                if (obj.plan[planka] == 0) continue\r\n                for (let i of dataTotal) {\r\n                    let num1, num2 = 0\r\n                    let PlanIndexLvl = obj.plan[planka] - 1\r\n                    let ActuallyIndexLvl = (obj.actually[planka] || 0) - 1\r\n\r\n                    num1 = (result[i] == undefined) ? 0 : result[i]\r\n                    for (let level = ActuallyIndexLvl; PlanIndexLvl > level; level++) {\r\n                        let data = levels[i][level + 1] || 0\r\n                        num2 = num2 + data\r\n                    }\r\n                    result[i] = num1 + num2\r\n                }\r\n            }\r\n            dataTotal.forEach(e => { // отобразить данные\r\n                let v = result[e]\r\n                if (!v) v = 0\r\n                $('#' + e + 'result')[0].textContent =\r\n                    (e == 'TimeToUpgrade') ? fixTime(v) : v.toLocaleString()\r\n            })\r\n        }\r\n        //console.log(obj)\r\n    }\r\n    // отобразить данные \r\n    function loadUserData() {\r\n        let selects = document.querySelectorAll('td > select')\r\n        let data = JSON.parse(localStorage.getItem('planetsCalc')) || {}\r\n        if (!data) return;\r\n        for (let select in selects) {\r\n            let index = select\r\n            let isPlan = false\r\n\r\n            if (!(select % 2 == 0)) {\r\n                index--\r\n                isPlan = true\r\n            }\r\n            index = index / 2\r\n            let obj = data[(isPlan) ? 'plan' : 'actually']\r\n            if (!obj) continue;\r\n            let val = obj[planets.Name[index]]\r\n            if (!val) continue;\r\n            $(selects[select]).val(val);\r\n            if (isPlan) { // заблокировать плановые лавлы ниже актуальных \r\n                let value = $(selects[select - 1]).val()\r\n                for (let i = 0; $(selects[select]).children().length > i; i++) {\r\n                    $(selects[select][i]).prop('disabled', value > i)\r\n                }\r\n            }\r\n        }\r\n        updatePageData()\r\n    }\r\n}\r\nfunction fixTime(sec) {\r\n    let result = '';\r\n    let days = Math.floor(sec / 60 / 60 / 24);\r\n    sec -= days * 24 * 60 * 60;\r\n    let hours = Math.floor(sec / 60 / 60);\r\n    sec -= hours * 60 * 60;\r\n    let min = Math.floor(sec / 60);\r\n    sec -= min * 60;\r\n    if (days != 0) {\r\n        result += days + `${getStr('days')} `;\r\n    }\r\n    if (hours != 0) {\r\n        result += hours + `${getStr('hours')} `;\r\n    }\r\n    if (min != 0) {\r\n        result += min + ` ${getStr('min')} `;\r\n    }\r\n    if (sec != 0) {\r\n        result += Math.round(sec) + ` ${getStr('sec')}`;\r\n    }\r\n    return result || 0;\r\n};","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}